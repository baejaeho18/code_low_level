#import "MyObj.h"

#include <vector>
////////////////////////////////////////////////////////////////////////////////
//
//
//
////////////////////////////////////////////////////////////////////////////////
@interface MyObj() {
@private
  int temp1;
}

- (int)test_add:(int) a to:(int)b;
@end

////////////////////////////////////////////////////////////////////////////////
//
//
//
////////////////////////////////////////////////////////////////////////////////
@implementation MyObj {
  int temp2;
}

- (int)test_add:(int) a to:(int)b
{
  return a + b;
}

- (void) dealloc {
  NSLog(@"this delloc is called by ARC");
}

////////////////////////////////////////////////////////////////////////////////
//
//
//
////////////////////////////////////////////////////////////////////////////////
template <typename T>
using vec = std::vector<T>;

- (int)doSomeThing
{
  vec<int> v;
    
  auto kk = ^(int a) { 
    result = a + 1;
    return result;
  };
  
  return kk(1);
}

////////////////////////////////////////////////////////////////////////////////
//
//
//
////////////////////////////////////////////////////////////////////////////////
@end
