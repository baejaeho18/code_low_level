2009년 06월 15일 월요일
	LONG TERM TODOs
		Coding Practice
			Algorithm
			| code 밑에 backtrack 문제 다 풀고 정리한다. 
			| permutation, queen, bishop
			WWW
			| xhtml/css 익숙하게 사용하기 
			| javascript(prototype, scriptaculos) 
			| railscast /asciicast
			|
		Reading
			Prototype and Scipt.aculo.us
			|
			Scrum 
			| 도서관에 있다. 그리고 이책은 간단하게 읽을 수 있다. 
			|
			SICP 
			| 현재 메인 공부 교제
			| 	
			TMP(mpl, phoenix, fusion, spirit) 
			| 시장은 한 분야의 전문가를 찾는다. 
			|
			대천덕 신부님 자서전 
			|
			나와하나님 우리와 하나님
	TODOs
	|
	DOING
		iPhone
		| 공부 읽기를 계속 진행
		|
		HTTP
		| p2에 HTTP protocol을 추가
		|
		Coding practice
		P2
			tcp_server내의 코드가 완벽하지 않다.
			| 
			http_protocol의 length 잘라내기 정확하게 구현하기
			|
	DONE
	| 
	THINKs
	| 어제 오늘 boost::optional, boost::variant를 보다.
	| 예전에도 많이 읽어 봤지만 그리 눈에 들어오지 않던 것이 spirit 2.1을 보면서
	| 필요를 느끼니 자연스럽게 봐지게 되다.
	|
	| variant는 실제 apply_visitor안에 들어가는 첫번째 인자 static_visitor<>를
	| 상속받는 함수 객체와 리턴타입을 처리하는 것만 봤으면 별개 없는데 이때동안
	| 어렵게 생각해왔었다.
	|
	| 하지만 variant의 구현은 andrei가 예전에 Generic<Programming>에 썼던 것처럼
	| 그리 만만한 내용이 아니다. (요즘와서 내가 그걸 이해할 필요가 있나 싶기도 하다.)
	| 
	|
	|
	FACTs clarified
	|
2009년 06월 14일 일요일
	LONG TERM TODOs
	TODOs
	DOING
	DONE
	| http protocol 마지막 부분을 제외한 나머지
	| tcp_server가 io/net thread로 분리되는 지점에서 공유되는 데이타를 복사를 통해서 분리하다.
	|
	| multi-core환경에서 const의 중요성을 절감하다.
	| 
	THINKs
	|
	FACTs clarified
	| The observation made in the last paragraph about the irrelevant nature of 
	| the additional nil_t with respect to purpose of optional<T> suggests an 
	| alternative model: a container that either has a value of T or nothing.
	|
	| c++에는 초기화되지 않은 객체라는 개념이 없다.그래서 EOF, nops, -1 등등이 
	| 쓰여져 왔는데 최근 boost.variant의 도입으로 T+nil_t 라는 variant가
	| 초기화되지 않은객체에 대한 정형적인 처리를 지원하게 되었다.
	|
	| boost::optional은 boost::variant에서 영감을 얻긴 하였으나 container라는
	| 개념을 도입 T or nothing의 분명한 상태를 제공함으로써 boost::variant보다 
	| 더 깔끔한 개념을 정립하였다.
	|
2009년 06월 12일 금요일
	LONG TERM TODOs
	TODOs
	DOING
	DONE
	| http protocol 마지막 부분을 제외한 나머지
	| tcp_server가 io/net thread로 분리되는 지점에서 공유되는 데이타를 복사를 통해서 분리하다.
	|
	| multi-core환경에서 const의 중요성을 절감하다.
	| 
	THINKs
	|
	FACTs clarified
	
2009년 06월 11일 목요일
	LONG TERM TODOs
	TODOs
	DOING
	DONE
	| http protocol 마지막 부분을 제외한 나머지
	| tcp_server가 io/net thread로 분리되는 지점에서 공유되는 데이타를 복사를 통해서 분리하다.
	|
	| multi-core환경에서 const의 중요성을 절감하다.
	| 
	THINKs
	| http parsing을 spirit을 쓰지 않고 간단하게 string.find를 써서 짜봤다.
	| 생각보다 훨씬 깔끔하고 가볍게 감동을 가지고 끝내다.
	| 특히 인상적이었던 것. textmate로 내가 직접 간단하게 assert_equal을 구현하고
	| 그걸 기반으로 테스트 코드를 다 정리했다는 것. 그러니 훨씬 잘 되었다는 것
	|
	| 자고로 프로그래밍 연습은 sicp같은 걸로 해야된다.
	|
	| c++의 generic 프로그래밍이 결국 c++로 scheem처럼 짜보자는 것 아니겠는가?
	| 속도야 더 빠르지만 스킴의 그 깔끔하고 아름다움을 따라갈 수 없다.
	|
	FACTs clarified
	
2009년 06월 07일 일요일
	LONG TERM TODOs
	TODOs
	DOING
	DONE
	THINKs
	FACTs clarified
		P2
		| 각 dylib는 log를 남기지 않고 exception발생 시 전부 relay_agent에게
		| 넘긴다. 그래서 로깅은 relay_agent가 하는 것이 아주 합당하다.
	
2009년 06월 05일 금요일
	LONG TERM TODOs
		Coding Practice
			Algorithm
			| code 밑에 backtrack 문제 다 풀고 정리한다. 
			| permutation, queen, bishop
			WWW
			| xhtml/css 익숙하게 사용하기 
			| javascript(prototype, scriptaculos) 
			| railscast /asciicast
			|
		Reading
			Prototype and Scipt.aculo.us
			|
			Scrum 
			| 도서관에 있다. 그리고 이책은 간단하게 읽을 수 있다. 
			|
			SICP 
			| 현재 메인 공부 교제
			| 	
			TMP(mpl, phoenix, fusion, spirit) 
			| 시장은 한 분야의 전문가를 찾는다. 
			|
			대천덕 신부님 자서전 
			|
			나와하나님 우리와 하나님
	TODOs
	|
	|
	DOING
		iPhone
		| 공부 읽기를 계속 진행
		|
		HTTP
		| p2에 HTTP protocol을 추가
		|
		Coding practice
		P2
			tcp_server내의 코드가 완벽하지 않다.
			| 에러처리 등등.
			|
			http_protocol의 length 잘라내기 정확하게 구현하기
			|
	DONE
	|
	THINKs
	|
	|
	FACTs clarified
		RubySpec
		| the primary goal of RubySpec is to provide a definition of the 
		| Ruby programming language along with a way to test that an 
		| implementation conforms to the definition
	
2009년 06월 04일 목요일
	LONG TERM TODO
	TODO
	DOING
	DONE
	| HTTP parser
	|    기본 구현 완료
	|
	THINKs
	|
	FACTs clarified
	|
	| * raw parser는 matching한 string의 iterator의 range(begin, end)를 리턴한다.
	|   그래서 spirit2.1의 맥락에서 std::string과 호환
	|
	| * basic_stream_socket::async_receive는 주어진 길이 만큼 받기 위해서 노력하나
	|   그전에 end-of-stream을 만나면 받은만큼 리턴한다.
	|
	| * free function인 async_read는 주어진 길이만큼 읽을 때가지 무조건 blocking 한다.
	|
	|   미들웨어에서는 이 두 연산에 대해서 가려쓸 필요가 있어보인다.
=======
2009년 06월 04일 목요일
	LONG TERM TODO
	| Coding practice
	|  * code 밑에 backtrack 문제 다 풀고 정리한다.
	|    permutation, queen, bishop
	|
	|  * www programming 
	|  	 xhtml 익숙하게 사용하기
	|    css(box model)
	|    javascript(prototype, scriptaculos)
	|    railscast 
	|
	| Reading
	|  * Prototype and script.aculo.us
	|
	|  * Scrum
	|    도서관에 있다. 그리고 이책은 간단하게 읽을 수 있다.
	|    Pragmatic Thinking and Learning을 읽은 후에 읽는다.
	|
	|  * SICP
	|    현재 메인 공부 교제
	|
	|  * TMP(mpl, phoenix, fusion, spirit)
	|    예제를 풀어가면서
	|    도큐멘트로 튼튼해지고 있다. 시장은 한 분야의 전문가를 찾는다.
	|
	|  * 대천덕 신부님 자서전
	|    나와하나님 우리와 하나님 구입
	|
	TODO
	|
	DOING
	| iPhone
	|  * 공부 읽기를 계속 진행
	|
	| HTTP
	|  * p2에 HTTP protocol을 추가한다
	|    http parser는 계속해서 충분한 테스트를 거치도록 하고 개발 트리안에 넣는다.
	|
	|  * coding practice
	|    SCIP
	|    
	DONE
	| HTTP parser
	|    기본 구현 완료
	|
	THINKs
	|
	FACTs clarified
	| * raw는 matching한 string의 iterator의 range(begin, end)를 리턴한다.
	|   그래서 spirit2.1의 맥락에서 std::string과 호환
