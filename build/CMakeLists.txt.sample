# 요구 CMake 최소 버전
cmake_minimum_required (VERSION 3.28)
 
# 프로젝트 이름 및 버전
project ("andromeda")

set (PROJECT_VERSION_MAJOR 0)
set (PROJECT_VERSION_MINOR 1)
 
# 빌드 형상(Configuration) 및 주절주절 Makefile 생성 여부
set (CMAKE_BUILD_TYPE Debug)
set (CMAKE_VERBOSE_MAKEFILE true)
 
# 빌드 대상 바이너리 파일명 및 소스 파일 목록
set (OUTPUT_ELF
    "${CMAKE_PROJECT_NAME}-${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}"
)

set (SRC_FILES
    bar.c
    foo.c
    main.c
)

# 공통 컴파일러
#SET (CMAKE_C_COMPILER "gcc")
 
# 공통 헤더 파일 Include 디렉토리 (-I)
include_directories (include /usr/local/include)
 
# 공통 컴파일 옵션, 링크 옵션
add_compile_options (-g -Wall)
set (CMAKE_CXX_STANDARD 20)
set (CMAKE_EXE_LINKER_FLAGS "-static -Wl,--gc-sections")
 
# 공통 링크 라이브러리 (-l)
link_libraries(uart andromeda)
 
# 공통 링크 라이브러리 디렉토리 (-L)
link_directories (/usr/lib)
 
# "Debug" 형상 한정 컴파일 옵션, 링크 옵션
set (CMAKE_CXX_FLAGS_DEBUG "-DDEBUG -DC_FLAGS")
set (CMAKE_EXE_LINKER_FLAGS_DEBUG "-DDEBUG -DLINKER_FLAGS")
 
# "Release" 형상 한정 컴파일 옵션, 링크 옵션
set (CMAKE_CXX_FLAGS_RELEASE "-DRELEASE -DC_FLAGS")
set (CMAKE_EXE_LINKER_FLAGS_RELEASE "-DRELEASE -DLINKER_FLAGS")
 
# 출력 디렉토리
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BUILD_TYPE})
set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BUILD_TYPE}/lib)
set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BUILD_TYPE}/lib)
 
# 빌드 대상 바이너리 추가
add_executable(${OUTPUT_ELF} ${SRC_FILES})
