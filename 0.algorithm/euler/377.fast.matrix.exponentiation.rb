#!/usr/bin/env ruby

require "pp"
require "matrix"

class Matrix
  public :[]=, :set_element, :set_component
end

# r = [0]*18 
# m = Matrix[*18.times.map { r.clone }]
# 
# for i in 0...9
#   m[0,   i] = 1     # P(n)
#   m[9, i+9] = 10    # f(n) =  sum(i=1..9) (10 * f(n-i))
#   if i > 0
#     m[  i, i-1] = 1
#     m[9+i, 8+i] = 1  
#   end
# end

#    c(n) = c(n-1) + c(n-2) + ... + c(n-9)
#    s(n) = 10*s(n-1) + 1*c(n-1) + 10*s(n-2) + 2*c(n-2) + ... + 10*s(n-9) + 9*c(n-9) =
#           10*(s(n-1) + ... + s(n-9)) + c(n-1) + 2*c(n-2) + ... + 9*c(n-9)
#    This relations correspond to the 18 by 18 transition matrix t:
#    (the first 9 rows/cols for c the last 9 for s):
#
# m = Matrix[
# c(n-8) [0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-9) ]
# c(n-7) [0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-8) ]
# c(n-6) [0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-7) ]
# c(n-5) [0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-6) ]
# c(n-4) [0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-5) ]
# c(n-3) [0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-4) ]
# c(n-2) [0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-3) ]
# c(n-1) [0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-2) ]
# c(n-0) [1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-1) ]
#        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0],  # [ f(n-1) ]
#        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0],  # [ f(n-2) ]
#        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0],  # [ f(n-3) ]
#        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0],  # [ f(n-4) ]
#        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0],  # [ f(n-5) ]
#        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0],  # [ f(n-6) ]
#        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0],  # [ f(n-7) ]
#        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1],  # [ f(n-8) ]
# f(n-0) [9,  8,  7,  6,  5,  4,  3,  2,  1, 10, 10, 10, 10, 10, 10, 10, 10, 10]   # [ f(n-9) ]
# ]
#
# f(13) = M^1 * f(12)
#       = M^2 * f(11)
#       = M^c * f(00)
m = Matrix[
 [0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-9) ]
 [0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-8) ]
 [0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-7) ]
 [0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-6) ]
 [0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-5) ]
 [0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-4) ]
 [0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-3) ]
 [0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-2) ]
 [1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0],  # [ c(n-1) ]
 [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0],  # [ f(n-1) ]
 [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0],  # [ f(n-2) ]
 [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0],  # [ f(n-3) ]
 [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0],  # [ f(n-4) ]
 [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0],  # [ f(n-5) ]
 [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0],  # [ f(n-6) ]
 [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0],  # [ f(n-7) ]
 [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1],  # [ f(n-8) ]
 [9,  8,  7,  6,  5,  4,  3,  2,  1, 10, 10, 10, 10, 10, 10, 10, 10, 10]   # [ f(n-9) ]
]

D = 10 ** 9
s = 0
17.times {
  m = (m**13).map { |e| e % D }
  s = (s + m[17, 8]) % D
}

p s
